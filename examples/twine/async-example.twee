Twine is an interesting beast when it comes to control structures, so
we've kinda had to create our own thing here. For instances where we
have to wait on things in twine, we usually break things up into
command/status structures.

Our implementation of asynchronous return handling in Twine works
similarly to promises in javascript. This means we get structures
like:

<<async-thing-to-do>>

<<waiting>>

Content and macros to be displayed while waiting goes here.

<<success>>

Content and macros to be displayed if the thing we're doing succeeds
goes here.

<<failure>>

Content and macros to be displayed if the thing we're doing fails goes
here.

<</async-thing-to-do>>

For instance, when connecting to a buttplug server, you may have to
wait for the network or something, which means there are 3 states:

- Connecting
- Success (Connected)
- Failed (Not connected)

For the sugarcube macros in buttplug-twine, those states are
represented like this, inside of a "link" click event:

<<link "Click here to connect">>

<<buttplugconnectlocal>>

<<connecting>>

Connecting...

<<success>>

Connected!

<<failure>>

Connection failed!

<</buttplugconnectlocal>>

<</link>>
